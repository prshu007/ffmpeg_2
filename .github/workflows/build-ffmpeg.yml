# .github/workflows/build-ffmpeg.yml

name: Build FFmpeg Static Binaries

# This workflow will run on push to the main branch or manually via workflow_dispatch
on:
  push:
    branches:
      - main
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  # Job to build FFmpeg static binary targeting glibc 2.28 (compatible with 2.29+)
  build-ffmpeg-glibc228:
    name: Build FFmpeg (glibc 2.28 compatible)
    runs-on: ubuntu-latest # The host runner where the Docker container will run
    container:
      # Using Debian Buster Slim which includes glibc 2.28.
      # Binaries built against older glibc versions generally run on newer glibc systems.
      image: debian:buster-slim
    
    steps:
      - name: Checkout code
        # Checks out your repository code into the runner environment
        uses: actions/checkout@v4

      - name: Install build dependencies
        # Update package lists and install essential build tools
        run: |
          apt-get update
          apt-get install -y build-essential git yasm pkg-config libx264-dev

      - name: Clone FFmpeg source
        # Clones the official FFmpeg repository
        run: |
          git clone https://git.ffmpeg.org/ffmpeg.git ffmpeg_sources
          cd ffmpeg_sources

      - name: Configure FFmpeg
        # Configures FFmpeg for a static build with specific features
        run: |
          cd ffmpeg_sources
          ./configure \
            --prefix=/usr/local/ffmpeg_static_228 \ # Installation prefix inside the container
            --pkg-config-flags="--static" \        # Instructs pkg-config to prefer static libraries
            --extra-libs="-lpthread -lm -lz" \     # Explicitly link common system libraries
            --disable-shared \                     # Crucial for a static build (do not build shared libs)
            --enable-static \                      # Crucial for a static build (build static libs)
            --enable-gpl \                         # Enable components licensed under GPL
            --enable-libx264 \                     # Enable H.264 encoding via libx264
            --disable-ffplay \                     # Disable building the ffplay executable
            --disable-ffprobe \                    # Disable building the ffprobe executable
            --disable-doc                          # Disable building documentation to save time/space

      - name: Build FFmpeg
        # Compiles FFmpeg using all available processor cores for speed
        run: |
          cd ffmpeg_sources
          make -j$(nproc)

      - name: Create artifact directory
        # Creates a directory to store the final binary before uploading
        run: mkdir -p artifacts/glibc228

      - name: Move FFmpeg binary to artifact directory
        # Copies the compiled ffmpeg executable and makes it executable
        run: |
          cp ffmpeg_sources/ffmpeg artifacts/glibc228/ffmpeg_glibc2.28_amd64
          chmod +x artifacts/glibc228/ffmpeg_glibc2.28_amd64 # Ensure it's executable

      - name: Upload FFmpeg artifact (glibc 2.28)
        # Uploads the compiled binary as a GitHub Action artifact
        uses: actions/upload-artifact@v4
        with:
          name: ffmpeg-glibc2.28-amd64
          path: artifacts/glibc228/ffmpeg_glibc2.28_amd64

  # Job to build FFmpeg static binary targeting glibc 2.35 (compatible with 2.33-2.35+)
  build-ffmpeg-glibc235:
    name: Build FFmpeg (glibc 2.35 compatible)
    runs-on: ubuntu-latest # The host runner where the Docker container will run
    container:
      # Using Ubuntu 22.04 LTS which includes glibc 2.35.
      # This covers the 2.33-2.35 range and newer.
      image: ubuntu:22.04
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          apt-get update
          apt-get install -y build-essential git yasm pkg-config libx264-dev

      - name: Clone FFmpeg source
        run: |
          git clone https://git.ffmpeg.org/ffmpeg.git ffmpeg_sources
          cd ffmpeg_sources

      - name: Configure FFmpeg
        run: |
          cd ffmpeg_sources
          ./configure \
            --prefix=/usr/local/ffmpeg_static_235 \
            --pkg-config-flags="--static" \
            --extra-libs="-lpthread -lm -lz" \
            --disable-shared \
            --enable-static \
            --enable-gpl \
            --enable-libx264 \
            #--disable-ffplay \
            #--disable-ffprobe \
            --disable-doc

      - name: Build FFmpeg
        run: |
          cd ffmpeg_sources
          make -j$(nproc)

      - name: Create artifact directory
        run: mkdir -p artifacts/glibc235

      - name: Move FFmpeg binary to artifact directory
        run: |
          cp ffmpeg_sources/ffmpeg artifacts/glibc235/ffmpeg_glibc2.35_amd64
          chmod +x artifacts/glibc235/ffmpeg_glibc2.35_amd64

      - name: Upload FFmpeg artifact (glibc 2.35)
        uses: actions/upload-artifact@v4
        with:
          name: ffmpeg-glibc2.35-amd64
          path: artifacts/glibc235/ffmpeg_glibc2.35_amd64
