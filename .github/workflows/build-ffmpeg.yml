name: Build Static FFmpeg with Glibc Variants

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allows manual trigger

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Define the glibc versions and corresponding Docker images
        glibc_version:
          - { name: "glibc-2.29", image: "ubuntu:19.04" } # Ubuntu 19.04 uses glibc 2.29
          # Note: Ubuntu 21.04 (glibc 2.33) is EOL, consider a more recent one if possible,
          # or build a custom Docker image for it. Debian 11 (Bullseye) has 2.31.
          # For 2.33, 2.34, 2.35, you might need specific custom images or more recent LTS versions.
          - { name: "glibc-2.35", image: "ubuntu:22.04" } # Ubuntu 22.04 LTS uses glibc 2.35
          # Add more matrix entries for other glibc versions as needed, e.g.,
          # - { name: "glibc-2.33", image: "debian:bullseye" } # Debian 11 has glibc 2.31, close enough to 2.33 for some purposes, or you'll need a custom image for exact 2.33.
          # - { name: "glibc-2.34", image: "ubuntu:21.10" } # Ubuntu 21.10 is EOL.

    container:
      image: ${{ matrix.glibc_version.image }}
      options: --user root # Run as root to install packages

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up build environment for ${{ matrix.glibc_version.name }}
      run: |
        apt-get update
        apt-get install -y --no-install-recommends \
          build-essential \
          git \
          wget \
          yasm \
          pkg-config \
          libtool \
          autoconf \
          automake \
          cmake \
          # Add any other build tools or libraries required by other dependencies
        
        # Verify glibc version (optional, but good for debugging)
        ldd --version | head -n 1

    - name: Build libx264 static
      run: |
        X264_VERSION="stable" # Or a specific commit hash/tag
        FFMPEG_BUILD_DIR="/usr/local/ffmpeg_build_${{ matrix.glibc_version.name }}"
        mkdir -p $FFMPEG_BUILD_DIR

        # Clone x264
        git clone --depth 1 https://code.videolan.org/videolan/x264.git /tmp/x264_sources
        cd /tmp/x264_sources

        # Configure and build x264 statically
        ./configure \
          --prefix=$FFMPEG_BUILD_DIR \
          --enable-static \
          --disable-shared \
          --disable-cli # Disable CLI if you only need the library
        make -j$(nproc)
        make install

        # Clean up x264 sources (optional)
        rm -rf /tmp/x264_sources

    - name: Build FFmpeg static with libx264
      run: |
        FFMPEG_VERSION="n6.1.1" # Or a specific tag, e.g., "master" for latest
        FFMPEG_BUILD_DIR="/usr/local/ffmpeg_build_${{ matrix.glibc_version.name }}"

        # Clone FFmpeg
        git clone --depth 1 https://git.ffmpeg.org/ffmpeg.git /tmp/ffmpeg_sources
        cd /tmp/ffmpeg_sources

        # Configure FFmpeg
        # --pkg-config-flags="--static" is crucial for static linking
        # Ensure all --enable-lib* flags correspond to libraries you've built statically
        ./configure \
          --prefix=$FFMPEG_BUILD_DIR \
          --pkg-config-flags="--static" \
          --extra-cflags="-I$FFMPEG_BUILD_DIR/include" \
          --extra-ldflags="-L$FFMPEG_BUILD_DIR/lib" \
          --bindir=$FFMPEG_BUILD_DIR/bin \
          --enable-gpl \
          --enable-version3 \
          --enable-nonfree \
          --disable-shared \
          --enable-static \
          --disable-autodetect \
          --enable-libx264 \
          --disable-doc \
          --disable-ffplay \
          --disable-ffprobe \
          # Add other desired libraries here, e.g., --enable-libvpx --enable-libfdk-aac
          # If you enable more libraries, make sure they are also built statically in a preceding step.

        make -j$(nproc)
        make install

        # Verify the built ffmpeg
        $FFMPEG_BUILD_DIR/bin/ffmpeg -version
        ldd $FFMPEG_BUILD_DIR/bin/ffmpeg # Check dynamic dependencies

        # Clean up FFmpeg sources (optional)
        rm -rf /tmp/ffmpeg_sources

    - name: Upload FFmpeg binaries
      uses: actions/upload-artifact@v4
      with:
        name: ffmpeg-static-${{ matrix.glibc_version.name }}-linux-amd64
        path: /usr/local/ffmpeg_build_${{ matrix.glibc_version.name }}/bin/ffmpeg
        # If you built ffprobe/ffplay, include them too:
        # path: /usr/local/ffmpeg_build_${{ matrix.glibc_version.name }}/bin/ffmpeg
        #       /usr/local/ffmpeg_build_${{ matrix.glibc_version.name }}/bin/ffprobe
        #       /usr/local/ffmpeg_build_${{ matrix.glibc_version.name }}/bin/ffplay
